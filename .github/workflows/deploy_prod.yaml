name: Build and deploy to Prod

on:
  push:
    branches: [main]
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'README.md'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      checks: write
      id-token: write
      packages: write
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew clean build
        env:
          GITHUB_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

      - name: Build image
        id: build-image
        uses: nais/docker-build-push@v0
        with:
          dockerfile: Dockerfile
          team: pensjonskalkulator
          image_suffix: tps
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}

  deploy_prod:
    name: Deploy to prod
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        name: Deploy to prod
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais-prod-gcp.yaml,.nais/unleash-apitoken-prod.yaml
          IMAGE: ${{ needs.build.outputs.image }}

  trivy-imagescan:
    name: Scan Docker image
    needs: [ build ]
    env:
      TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      id-token: write
      security-events: write
    steps:
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: pensjonskalkulator
      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image }}
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          limit-severities-for-sarif: true
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'